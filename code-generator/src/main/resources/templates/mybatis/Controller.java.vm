package ${package}.${moduleName}.controller;

import java.util.List;
import java.util.Map;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import java.lang.Void;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.I${className}Service;
import com.yqtsoft.utils.utils.HandleResult;
import com.yqtsoft.utils.utils.PageUtils;


/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(tags = "${comments}")
@RestController
@RequestMapping("/${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private I${className}Service i${className}Service;

    /**
    * 列表
    * @param params
    * @return
    */
    @ApiOperation(value = "列表")
    @PostMapping(value = "/list")
    public HandleResult<PageUtils> list(@RequestBody @Validated ${className}QueryInput params) {
        PageUtils page =  i${className}Service.queryPage(params);
        return new HandleResult<>(page);
    }


    /**
     * 详情信息
     * @param ${pk.attrname}
     * @return
     */
    @ApiOperation(value = "详情信息")
    @GetMapping(value ="/info/{${pk.attrname}}")
    public HandleResult<${className}> info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}) {
            ${className} ${classname} = i${className}Service.selectById(${pk.attrname});
        return new HandleResult<>(${classname});
    }

    /**
     * 保存
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "保存数据")
    @PostMapping(value = "/add")
    public HandleResult<Void> add(@RequestBody ${className} ${classname}) {
           i${className}Service.add(${classname});

        return HandleResult.VOID_HANDLE_RESULT;
    }

    /**
     * 修改数据
     * @param ${classname}
     * @return
     */
    @PostMapping(value = "/update")
    public HandleResult<Void> update(@RequestBody ${className} ${classname}) {
            i${className}Service.update(${classname});

        return HandleResult.VOID_HANDLE_RESULT;
    }

    /**
    * 删除
    * @param ${pk.attrname}
    * @return
    */
    @GetMapping(value = "/delete")
    public HandleResult<Void> delete(@RequestParam  ${pk.attrType} ${pk.attrname}) {
            i${className}Service.delete(${pk.attrname});
        return HandleResult.VOID_HANDLE_RESULT;
    }

}
